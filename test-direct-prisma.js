// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
require('dotenv').config();

// –°–æ–∑–¥–∞–µ–º Prisma –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º DIRECT_DATABASE_URL
const { PrismaClient } = require('@prisma/client');

async function testDirectPrisma() {
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º DIRECT_DATABASE_URL –≤–º–µ—Å—Ç–æ DATABASE_URL
  const directUrl = process.env.DIRECT_DATABASE_URL;
  console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º DIRECT_DATABASE_URL:', directUrl ? directUrl.substring(0, 50) + '...' : '–ù–ï –ù–ê–ô–î–ï–ù');
  
  // –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω–∏–º DATABASE_URL –Ω–∞ DIRECT_DATABASE_URL
  const originalDatabaseUrl = process.env.DATABASE_URL;
  process.env.DATABASE_URL = directUrl;
  
  const prisma = new PrismaClient({
    log: ['info', 'warn', 'error'],
    datasources: {
      db: {
        url: directUrl
      }
    }
  });

  try {
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ Prisma...');
    const result = await prisma.$queryRaw`SELECT 1 as test`;
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', result);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
    const productCount = await prisma.product.count();
    console.log(`üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ${productCount}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    const products = await prisma.product.findMany({
      include: {
        category: true,
        skus: true
      },
      take: 5
    });
    
    console.log('\nüìã –¢–æ–≤–∞—Ä—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
    products.forEach(product => {
      console.log(`- ${product.name} (${product.slug})`);
      console.log(`  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category?.name || '–ù–µ—Ç'}`);
      console.log(`  SKU: ${product.skus?.length || 0} —à—Ç.`);
    });
    
    // –ò—â–µ–º —Ç–æ–≤–∞—Ä Lv
    const lvProduct = await prisma.product.findFirst({
      where: { name: 'Lv' },
      include: {
        category: true,
        skus: true
      }
    });
    
    if (lvProduct) {
      console.log('\n‚úÖ –¢–æ–≤–∞—Ä "Lv" –Ω–∞–π–¥–µ–Ω –≤ PostgreSQL!');
      console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${lvProduct.category?.name}`);
      console.log(`   SKU: ${lvProduct.skus?.length || 0} —à—Ç.`);
    } else {
      console.log('\n‚ùå –¢–æ–≤–∞—Ä "Lv" –ù–ï –Ω–∞–π–¥–µ–Ω –≤ PostgreSQL');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π DATABASE_URL
    process.env.DATABASE_URL = originalDatabaseUrl;
    await prisma.$disconnect();
  }
}

testDirectPrisma();