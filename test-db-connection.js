const { PrismaClient } = require('@prisma/client')
require('dotenv').config({ path: '.env.local' })

async function testDatabaseConnection() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
  console.log('üìç DATABASE_URL:', process.env.DATABASE_URL?.replace(/:[^@]+@/, ':****@'))
  
  const prisma = new PrismaClient()
  
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    await prisma.$connect()
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!')
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    const productCount = await prisma.product.count()
    const orderCount = await prisma.order.count()
    const customerCount = await prisma.customer.count()
    const categoryCount = await prisma.category.count()
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:')
    console.log(`- –¢–æ–≤–∞—Ä–æ–≤: ${productCount}`)
    console.log(`- –ó–∞–∫–∞–∑–æ–≤: ${orderCount}`)
    console.log(`- –ö–ª–∏–µ–Ω—Ç–æ–≤: ${customerCount}`)
    console.log(`- –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${categoryCount}`)
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤
    const recentOrders = await prisma.order.findMany({
      take: 3,
      orderBy: { createdAt: 'desc' },
      include: { customer: true }
    })
    
    if (recentOrders.length > 0) {
      console.log('\nüì¶ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:')
      recentOrders.forEach(order => {
        console.log(`- –ó–∞–∫–∞–∑ #${order.orderNumber} –æ—Ç ${order.customer.name} (${order.status})`)
      })
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

testDatabaseConnection()