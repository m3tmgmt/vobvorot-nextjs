require('dotenv').config();

// –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ Telegram –±–æ—Ç–∞
const { Bot } = require('grammy');

async function testRealBot() {
  const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
  const OWNER_ID = process.env.OWNER_TELEGRAM_ID;
  
  console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ Telegram –±–æ—Ç–∞...');
  console.log(`Bot Token: ${BOT_TOKEN ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
  console.log(`Owner ID: ${OWNER_ID || '–ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
  
  if (!BOT_TOKEN) {
    console.log('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    return;
  }
  
  const bot = new Bot(BOT_TOKEN);
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const me = await bot.api.getMe();
    console.log(`‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @${me.username} (${me.first_name})`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É (–µ—Å–ª–∏ ID —É–∫–∞–∑–∞–Ω)
    if (OWNER_ID) {
      try {
        await bot.api.sendMessage(OWNER_ID, 
          'üß™ *–¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏*\n\n' +
          '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏!\n' +
          '‚Ä¢ ‚úÖ API –ø–æ–¥–∫–ª—é—á–µ–Ω\n' +
          '‚Ä¢ ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö SQLite —Ä–∞–±–æ—Ç–∞–µ—Ç\n' +
          '‚Ä¢ ‚úÖ –¢–æ–≤–∞—Ä "Lv" –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ —Å–∞–π—Ç–µ\n' +
          '‚Ä¢ ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\n\n' +
          '_–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã_',
          { parse_mode: 'Markdown' }
        );
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–ª–∞–¥–µ–ª—å—Ü—É');
      } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    const webhookInfo = await bot.api.getWebhookInfo();
    console.log(`\nüì° Webhook –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:`);
    console.log(`   URL: ${webhookInfo.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    console.log(`   Pending updates: ${webhookInfo.pending_update_count}`);
    console.log(`   Last error: ${webhookInfo.last_error_message || '–Ω–µ—Ç –æ—à–∏–±–æ–∫'}`);
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: ${error.message}`);
  }
  
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

testRealBot();