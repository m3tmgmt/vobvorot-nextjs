const { PrismaClient } = require('@prisma/client');

// –°–∏–º—É–ª–∏—Ä—É–µ–º API —Ä–æ—É—Ç
async function testProductsAPI() {
  const prisma = new PrismaClient();
  
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ç–æ–≤–∞—Ä–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Ç–∞–∫ –∂–µ –∫–∞–∫ –≤ API route
    const products = await prisma.product.findMany({
      include: {
        category: {
          select: {
            id: true,
            name: true,
            slug: true
          }
        },
        skus: {
          where: {
            isActive: true
          },
          orderBy: {
            createdAt: 'asc'
          }
        },
        images: {
          orderBy: {
            isPrimary: 'desc'
          }
        }
      },
      where: {
        isActive: true
      },
      orderBy: {
        createdAt: 'desc'
      }
    });

    console.log(`üì¶ API –≤–µ—Ä–Ω—É–ª ${products.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    
    products.forEach(product => {
      console.log(`\nüè∑Ô∏è –¢–æ–≤–∞—Ä: ${product.name}`);
      console.log(`   ID: ${product.id}`);
      console.log(`   Slug: ${product.slug}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${product.description || '–ù–µ—Ç'}`);
      console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category?.name || '–ù–µ—Ç'}`);
      console.log(`   SKU: ${product.skus?.length || 0} —à—Ç.`);
      console.log(`   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${product.images?.length || 0} —à—Ç.`);
      
      if (product.skus && product.skus.length > 0) {
        const sku = product.skus[0];
        console.log(`   –¶–µ–Ω–∞: $${sku.price}`);
        console.log(`   –°–∫–ª–∞–¥: ${sku.stock} —à—Ç.`);
        console.log(`   SKU –∫–æ–¥: ${sku.sku}`);
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–≤–∞—Ä Lv –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
    const lvProduct = products.find(p => p.name === 'Lv');
    if (lvProduct && lvProduct.skus && lvProduct.skus.length > 0) {
      const availableSku = lvProduct.skus.find(s => s.isActive && s.stock > 0);
      if (availableSku) {
        console.log('\n‚úÖ –¢–æ–≤–∞—Ä "Lv" –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É!');
        console.log(`   SKU ID: ${availableSku.id}`);
        console.log(`   –¶–µ–Ω–∞: $${availableSku.price}`);
        console.log(`   –°–∫–ª–∞–¥: ${availableSku.stock} —à—Ç.`);
      } else {
        console.log('\n‚ùå –¢–æ–≤–∞—Ä "Lv" –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö SKU —Å –æ—Å—Ç–∞—Ç–∫–æ–º)');
      }
    } else {
      console.log('\n‚ùå –¢–æ–≤–∞—Ä "Lv" –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É –Ω–µ–≥–æ –Ω–µ—Ç SKU');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ API:', error.message);
    console.error('–≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ API –≤–µ—Ä–Ω–µ—Ç –æ—à–∏–±–∫—É 500, –∞ –Ω–µ —Ç–æ–≤–∞—Ä—ã');
  } finally {
    await prisma.$disconnect();
  }
}

testProductsAPI();