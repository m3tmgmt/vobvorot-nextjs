import { NextRequest, NextResponse } from 'next/server'
import { webhookCallback } from 'grammy'
import { bot } from '@/lib/telegram-bot'

// –û—Å–Ω–æ–≤–Ω–æ–π webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª–Ω–æ–π CRM-—Å–∏—Å—Ç–µ–º—ã –ë–ï–ó AI
export async function POST(req: NextRequest) {
  try {
    console.log('üöÄ Telegram webhook received (FULL CRM - NO AI)')
    
    // –í–†–ï–ú–ï–ù–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø –û–¢–õ–ê–î–ö–ò
    const body = await req.clone().json()
    console.log('üîç WEBHOOK DEBUG:', {
      headers: Object.fromEntries(req.headers.entries()),
      botInfo: body.message?.from || body.callback_query?.from,
      chatInfo: body.message?.chat || body.callback_query?.message?.chat,
      messageText: body.message?.text || 'no text'
    })
    
    // üõ°Ô∏è –§–ò–õ–¨–¢–† –ë–û–¢–û–í - –ë–ª–æ–∫–∏—Ä—É–µ–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –±–æ—Ç—ã (–≤–∫–ª—é—á–∞—è @DrHillBot_bot)
    const ALLOWED_BOT_IDS = [
      7700098378, // VobvorotAdminBot - –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
      // –î–æ–±–∞–≤–∏—Ç—å —Å—é–¥–∞ ID –¥—Ä—É–≥–∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –±–æ—Ç–æ–≤ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    ]
    
    const fromUser = body.message?.from || body.callback_query?.from
    const isBot = fromUser?.is_bot || false
    const userId = fromUser?.id
    const username = fromUser?.username
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –ë–û–¢ –∏ –æ–Ω –ù–ï –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    if (isBot && userId && !ALLOWED_BOT_IDS.includes(userId)) {
      console.log(`üö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–æ—Ç:`)
      console.log(`   ID: ${userId}`)
      console.log(`   Username: @${username || 'unknown'}`)
      console.log(`   is_bot: ${isBot}`)
      console.log(`   üéØ –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å @DrHillBot_bot –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π –±–æ—Ç`)
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–æ—Ç –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª –∑–∞–ø—Ä–æ—Å
      return NextResponse.json({ 
        ok: true, 
        message: 'Request processed by security filter' 
      })
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (!isBot) {
      console.log(`üë§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @${username || 'unknown'} (ID: ${userId})`)
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
    const secretToken = process.env.TELEGRAM_WEBHOOK_SECRET?.trim() || 'vobvorot_webhook_secret_2025'
    const secretHeader = req.headers.get('x-telegram-bot-api-secret-token')
    
    if (secretHeader !== secretToken) {
      console.warn('Invalid webhook secret token')
      return new Response('Unauthorized', { status: 401 })
    }
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Grammy –¥–ª—è –ü–û–õ–ù–û–ì–û –±–æ—Ç–∞ (–ë–ï–ó AI)
    const handleUpdate = webhookCallback(bot, 'std/http', {
      secretToken: secretToken,
      onTimeout: () => {
        console.log('‚è∞ Webhook callback timeout!')
      }
    })
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ Grammy (–ü–û–õ–ù–´–ô CRM –ë–ï–ó AI)
    const result = await handleUpdate(req)
    
    console.log('‚úÖ Webhook processed successfully (FULL CRM - NO AI)')
    return result
    
  } catch (error) {
    console.error('üí• Webhook error:', error)
    return NextResponse.json({ ok: false }, { status: 500 })
  }
}

// AI-—Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ü–û–õ–ù–£–Æ CRM –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞