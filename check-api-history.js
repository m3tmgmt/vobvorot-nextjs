// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É API –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è
const fetch = require('node-fetch');

async function checkAPI() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å–∞–π—Ç–∞...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π API
    const response = await fetch('https://vobvorot.com/api/products');
    const data = await response.json();
    
    console.log('üìä –û—Ç–≤–µ—Ç API:');
    console.log('- –°—Ç–∞—Ç—É—Å:', response.status);
    console.log('- –£—Å–ø–µ—Ö:', data.success);
    console.log('- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:', data.total || 0);
    
    if (data.error) {
      console.log('- –û—à–∏–±–∫–∞:', data.error.message);
      console.log('- –î–µ—Ç–∞–ª–∏:', data.error.details);
    }
    
    if (data.products && data.products.length > 0) {
      console.log('\nüì¶ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:');
      data.products.forEach(p => {
        console.log(`- ${p.name} (${p.slug})`);
      });
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('\nüè† –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
    const mainPage = await fetch('https://vobvorot.com');
    console.log('- –°—Ç–∞—Ç—É—Å –≥–ª–∞–≤–Ω–æ–π:', mainPage.status);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message);
  }
}

checkAPI();