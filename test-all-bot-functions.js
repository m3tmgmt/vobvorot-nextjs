// ============================================
// üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AI –ê–°–°–ò–°–¢–ï–ù–¢–ê VOBVOROT
// ============================================
// –î–∞—Ç–∞: 2025-01-29
// –í–µ—Ä—Å–∏—è: 1.0
// –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: 82+
// ============================================

const { Bot } = require('grammy')
const fetch = require('node-fetch')

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BOT_TOKEN = '7700098378:AAGZ1zZOxiwXbJeknO9SvyN25KvfWQkQNrI'
const ADMIN_ID = '316593422' // ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const WEBHOOK_URL = 'http://localhost:3000/api/telegram/ai-assistant'

// –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
const colors = {
  reset: '\x1b[0m',
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m',
  magenta: '\x1b[35m'
}

// –°—á–µ—Ç—á–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤
let totalTests = 0
let passedTests = 0
let failedTests = 0
let warnings = 0

// –ì—Ä—É–ø–ø—ã —Ç–µ—Å—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const testCategories = {
  orders: {
    name: 'üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏',
    tests: [
      { message: '–ø–æ–∫–∞–∂–∏ –∑–∞–∫–∞–∑—ã', expectedAction: 'view_orders', description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤' },
      { message: '–∑–∞–∫–∞–∑—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è', expectedAction: 'view_orders', expectedParams: { filter: 'today' }, description: '–ó–∞–∫–∞–∑—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è' },
      { message: '–∑–∞–∫–∞–∑—ã –∑–∞ –Ω–µ–¥–µ–ª—é', expectedAction: 'view_orders', expectedParams: { filter: 'week' }, description: '–ó–∞–∫–∞–∑—ã –∑–∞ –Ω–µ–¥–µ–ª—é' },
      { message: '–∑–∞–∫–∞–∑—ã –∑–∞ –º–µ—Å—è—Ü', expectedAction: 'view_orders', expectedParams: { filter: 'month' }, description: '–ó–∞–∫–∞–∑—ã –∑–∞ –º–µ—Å—è—Ü' },
      { message: '–∑–∞–∫–∞–∑—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –Ω–æ–≤—ã–π', expectedAction: 'view_orders', expectedParams: { status: '–Ω–æ–≤—ã–π' }, description: '–§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É' },
      { message: '–∏–∑–º–µ–Ω–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ 123 –Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω', expectedAction: 'update_order_status', expectedParams: { orderId: 123, status: '–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' }, needConfirm: true, description: '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞' }
    ]
  },
  
  products: {
    name: 'üõç –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏',
    tests: [
      { message: '–¥–æ–±–∞–≤—å –ø–ª–∞—Ç—å–µ –∑–∞ 2500', expectedAction: 'add_product', expectedParams: { name: '–ø–ª–∞—Ç—å–µ', price: 2500 }, description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞' },
      { message: '–¥–æ–±–∞–≤—å —Ç–æ–≤–∞—Ä —é–±–∫–∞ —Ü–µ–Ω–∞ 1800', expectedAction: 'add_product', expectedParams: { name: '—é–±–∫–∞', price: 1800 }, description: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å' },
      { message: '–Ω–∞–π–¥–∏ —Ç–æ–≤–∞—Ä –ø–ª–∞—Ç—å–µ', expectedAction: 'search_product', expectedParams: { query: '–ø–ª–∞—Ç—å–µ' }, description: '–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞' },
      { message: '–Ω–∞–π–¥–∏ —é–±–∫–∏', expectedAction: 'search_product', expectedParams: { query: '—é–±–∫–∏' }, description: '–ü–æ–∏—Å–∫ –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ' }
    ]
  },
  
  categories: {
    name: 'üìÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏',
    tests: [
      { message: '—Å–æ–∑–¥–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–¥–µ–∂–¥–∞', expectedAction: 'add_category', expectedParams: { name: '–æ–¥–µ–∂–¥–∞' }, description: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' },
      { message: '–¥–æ–±–∞–≤—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã —Å —ç–º–æ–¥–∑–∏ üëú', expectedAction: 'add_category', expectedParams: { name: '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', emoji: 'üëú' }, description: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å —ç–º–æ–¥–∑–∏' },
      { message: '–ø–æ–∫–∞–∂–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', expectedAction: 'view_categories', description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π' },
      { message: '—Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π', expectedAction: 'view_categories', description: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞' }
    ]
  },
  
  customers: {
    name: 'üë• CRM —Ñ—É–Ω–∫—Ü–∏–∏',
    tests: [
      { message: '–Ω–∞–π–¥–∏ –∫–ª–∏–µ–Ω—Ç–∞ –º–∞—Ä–∏—è', expectedAction: 'search_customer', expectedParams: { query: '–º–∞—Ä–∏—è' }, description: '–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏' },
      { message: '–Ω–∞–π–¥–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏–≤–∞–Ω', expectedAction: 'search_customer', expectedParams: { query: '–∏–≤–∞–Ω' }, description: '–°–∏–Ω–æ–Ω–∏–º "–ø–æ–∫—É–ø–∞—Ç–µ–ª—å"' },
      { message: '–Ω–∞–π–¥–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ email test@mail.ru', expectedAction: 'search_customer', expectedParams: { query: 'test@mail.ru' }, description: '–ü–æ–∏—Å–∫ –ø–æ email' },
      { message: '–Ω–∞–π–¥–∏ –∫–ª–∏–µ–Ω—Ç–∞ +380501234567', expectedAction: 'search_customer', expectedParams: { query: '+380501234567' }, description: '–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É' }
    ]
  },
  
  statistics: {
    name: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
    tests: [
      { message: '–ø–æ–∫–∞–∂–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É', expectedAction: 'stats', description: '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' },
      { message: '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è', expectedAction: 'stats', expectedParams: { period: 'today' }, description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å' },
      { message: '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é', expectedAction: 'stats', expectedParams: { period: 'week' }, description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é' },
      { message: '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü', expectedAction: 'stats', expectedParams: { period: 'month' }, description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü' }
    ]
  },
  
  videos: {
    name: 'üé¨ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ',
    tests: [
      { message: '–∑–∞–≥—Ä—É–∑–∏ –≤–∏–¥–µ–æ –Ω–∞ –≥–ª–∞–≤–Ω—É—é', expectedAction: 'upload_home_video', description: '–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ –≥–ª–∞–≤–Ω—É—é' },
      { message: '–ø–æ–∫–∞–∂–∏ –≤–∏–¥–µ–æ –≥–ª–∞–≤–Ω–æ–π', expectedAction: 'view_home_video', description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ –≥–ª–∞–≤–Ω–æ–π' },
      { message: '—É–¥–∞–ª–∏ –≤–∏–¥–µ–æ –≥–ª–∞–≤–Ω–æ–π', expectedAction: 'delete_home_video', needConfirm: true, description: '–£–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –≥–ª–∞–≤–Ω–æ–π' },
      { message: '–ø–æ–∫–∞–∂–∏ –≤–∏–¥–µ–æ –ø–æ–¥–ø–∏—Å–µ–π', expectedAction: 'list_sign_videos', description: '–°–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ –ø–æ–¥–ø–∏—Å–µ–π' },
      { message: '–¥–æ–±–∞–≤—å –≤–∏–¥–µ–æ –ø–æ–¥–ø–∏—Å–µ–π', expectedAction: 'add_sign_video', description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –ø–æ–¥–ø–∏—Å–µ–π' },
      { message: '—É–¥–∞–ª–∏ –≤–∏–¥–µ–æ –ø–æ–¥–ø–∏—Å–µ–π ABC123', expectedAction: 'delete_sign_video', expectedParams: { videoId: 'ABC123' }, needConfirm: true, description: '–£–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –ø–æ–¥–ø–∏—Å–µ–π' }
    ]
  },
  
  payments: {
    name: 'üí≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏',
    tests: [
      { message: '—Å–¥–µ–ª–∞–π –≤–æ–∑–≤—Ä–∞—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ 123 –ø—Ä–∏—á–∏–Ω–∞ –±—Ä–∞–∫', expectedAction: 'refund_payment', expectedParams: { orderId: '123', reason: '–±—Ä–∞–∫' }, needConfirm: true, description: '–ü–æ–ª–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç' },
      { message: '—á–∞—Å—Ç–∏—á–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç 500 –≥—Ä–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞ 456', expectedAction: 'refund_payment', expectedParams: { orderId: '456', amount: 500 }, needConfirm: true, description: '–ß–∞—Å—Ç–∏—á–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç' },
      { message: '–ø—Ä–æ–≤–µ—Ä—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ 789', expectedAction: 'check_payment_status', expectedParams: { orderId: '789' }, description: '–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞' },
      { message: '–ø–æ–≤—Ç–æ—Ä–∏ –ø–ª–∞—Ç–µ–∂ –¥–ª—è –∑–∞–∫–∞–∑–∞ 234', expectedAction: 'retry_payment', expectedParams: { orderId: '234' }, description: '–ü–æ–≤—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞' },
      { message: '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ 567', expectedAction: 'view_payment_info', expectedParams: { orderId: '567' }, description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ' }
    ]
  },
  
  email: {
    name: 'üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
    tests: [
      { message: '–æ—Ç–ø—Ä–∞–≤—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –Ω–∞ test@example.com', expectedAction: 'send_test_email', expectedParams: { email: 'test@example.com' }, description: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ' },
      { message: '–æ—Ç–ø—Ä–∞–≤—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ 123', expectedAction: 'send_order_notification', expectedParams: { orderId: '123' }, description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ' },
      { message: '–æ—Ç–ø—Ä–∞–≤—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä RU123456789CN –¥–ª—è –∑–∞–∫–∞–∑–∞ 456', expectedAction: 'send_shipping_notification', expectedParams: { orderId: '456', trackingNumber: 'RU123456789CN' }, description: '–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä' },
      { message: '—Å–¥–µ–ª–∞–π —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è', expectedAction: 'send_bulk_emails', expectedParams: { type: 'confirmation', dateFrom: 'today' }, needConfirm: true, description: '–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞' },
      { message: '–æ—Ç–ø—Ä–∞–≤—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–µ –ø–∏—Å—å–º–æ –≤—Å–µ–º: –°–∫–∏–¥–∫–∞ 20%', expectedAction: 'send_marketing_campaign', expectedParams: { subject: '–°–∫–∏–¥–∫–∞ 20%', content: '–°–∫–∏–¥–∫–∞ 20%' }, needConfirm: true, description: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥' },
      { message: '–ø–æ–∫–∞–∂–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É email –∑–∞ –º–µ—Å—è—Ü', expectedAction: 'get_email_statistics', expectedParams: { dateFrom: 'month' }, description: 'Email —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' }
    ]
  },
  
  delivery: {
    name: 'üöö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–æ–π',
    tests: [
      { message: '—Ä–∞—Å—Å—á–∏—Ç–∞–π –¥–æ—Å—Ç–∞–≤–∫—É –¥–ª—è –∑–∞–∫–∞–∑–∞ 789', expectedAction: 'calculate_shipping', expectedParams: { orderId: '789' }, description: '–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏' },
      { message: '–º–æ–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –°–®–ê', expectedAction: 'check_shipping', expectedParams: { countryCode: 'US' }, description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω—ã –°–®–ê' },
      { message: '–¥–æ—Å—Ç–∞–≤–∫–∞ –≤ –ì–µ—Ä–º–∞–Ω–∏—é –≤–æ–∑–º–æ–∂–Ω–∞?', expectedAction: 'check_shipping', expectedParams: { countryCode: 'DE' }, description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω—ã –ì–µ—Ä–º–∞–Ω–∏—è' },
      { message: '–æ–±–Ω–æ–≤–∏ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –¥–ª—è –∑–∞–∫–∞–∑–∞ 123: RU123456789CN', expectedAction: 'update_tracking', expectedParams: { orderId: '123', trackingNumber: 'RU123456789CN' }, description: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞' },
      { message: '—Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ 456', expectedAction: 'get_delivery_status', expectedParams: { orderId: '456' }, description: '–°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏' },
      { message: '–ø–æ–∫–∞–∂–∏ –∑–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏', expectedAction: 'get_shipping_zones', description: '–ó–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏' },
      { message: '—Ä–∞—Å—Å—á–∏—Ç–∞–π –¥–æ—Å—Ç–∞–≤–∫—É –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ 123 456 789', expectedAction: 'calculate_bulk_shipping', expectedParams: { orderIds: ['123', '456', '789'] }, needConfirm: true, description: '–ú–∞—Å—Å–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç' }
    ]
  },
  
  logging: {
    name: 'üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
    tests: [
      { message: '–ø–æ–∫–∞–∂–∏ –ª–æ–≥–∏ –æ—à–∏–±–æ–∫', expectedAction: 'view_logs', expectedParams: { filter: 'errors' }, description: '–õ–æ–≥–∏ –æ—à–∏–±–æ–∫' },
      { message: '–ø–æ–∫–∞–∂–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏', expectedAction: 'view_logs', expectedParams: { filter: 'recent' }, description: '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏' },
      { message: '–ª–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 316593422', expectedAction: 'view_logs', expectedParams: { filter: 'user', userId: '316593422' }, description: '–õ–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' },
      { message: '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é', expectedAction: 'view_statistics', expectedParams: { dateFrom: 'week' }, description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é' },
      { message: '—ç–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤ –≤ csv', expectedAction: 'export_logs', expectedParams: { format: 'csv' }, description: '–≠–∫—Å–ø–æ—Ä—Ç –≤ CSV' },
      { message: '—ç–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤ –≤ json –∑–∞ –º–µ—Å—è—Ü', expectedAction: 'export_logs', expectedParams: { format: 'json', dateFrom: 'month' }, description: '–≠–∫—Å–ø–æ—Ä—Ç –≤ JSON' },
      { message: '–æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π', expectedAction: 'cleanup_logs', expectedParams: { daysToKeep: 30 }, needConfirm: true, description: '–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤' }
    ]
  },
  
  edge_cases: {
    name: '‚ö†Ô∏è –ö—Ä–∞–π–Ω–∏–µ —Å–ª—É—á–∞–∏ –∏ –æ—à–∏–±–∫–∏',
    tests: [
      { message: '–ø—Ä–∏–≤–µ—Ç', expectedAction: 'unknown', description: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞' },
      { message: '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?', expectedAction: 'unknown', description: '–í–æ–ø—Ä–æ—Å –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö' },
      { message: '', expectedAction: 'unknown', description: '–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', skipEmpty: true },
      { message: '123', expectedAction: 'unknown', description: '–¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞' },
      { message: '!!!', expectedAction: 'unknown', description: '–¢–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª—ã' },
      { message: '–Ω–∞–π–¥–∏ –∑–∞–∫–∞–∑ –Ω–æ–º–µ—Ä', expectedAction: 'unknown', description: '–ù–µ–ø–æ–ª–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞' }
    ]
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–æ—Ç—É
async function sendBotRequest(message) {
  const update = {
    update_id: Date.now(),
    message: {
      message_id: Date.now(),
      from: {
        id: parseInt(ADMIN_ID),
        is_bot: false,
        first_name: 'Test',
        username: 'test_admin'
      },
      chat: {
        id: parseInt(ADMIN_ID),
        first_name: 'Test',
        username: 'test_admin',
        type: 'private'
      },
      date: Math.floor(Date.now() / 1000),
      text: message
    }
  }

  try {
    const response = await fetch(WEBHOOK_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Telegram-Bot-Api-Secret-Token': BOT_TOKEN
      },
      body: JSON.stringify(update)
    })

    return {
      status: response.status,
      ok: response.ok,
      statusText: response.statusText
    }
  } catch (error) {
    return {
      status: 0,
      ok: false,
      error: error.message
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞
function checkTestResult(test, result) {
  // –î–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ —á–µ—Ä–µ–∑ polling –∏–ª–∏ webhook
  // –í —Ä–µ–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
  return result.ok && result.status === 200
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
async function runTest(test, categoryName) {
  totalTests++
  
  if (test.skipEmpty && !test.message) {
    console.log(`${colors.yellow}‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç–æ–π —Ç–µ—Å—Ç${colors.reset}`)
    return
  }
  
  process.stdout.write(`  üìç ${test.description}... `)
  
  try {
    const result = await sendBotRequest(test.message)
    
    if (checkTestResult(test, result)) {
      passedTests++
      console.log(`${colors.green}‚úÖ PASS${colors.reset}`)
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (process.env.DEBUG) {
        console.log(`     –°–æ–æ–±—â–µ–Ω–∏–µ: "${test.message}"`)
        console.log(`     –û–∂–∏–¥–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${test.expectedAction}`)
        if (test.expectedParams) {
          console.log(`     –û–∂–∏–¥–∞–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: ${JSON.stringify(test.expectedParams)}`)
        }
        if (test.needConfirm) {
          console.log(`     –¢—Ä–µ–±—É–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: –¥–∞`)
        }
      }
    } else {
      failedTests++
      console.log(`${colors.red}‚ùå FAIL${colors.reset}`)
      console.log(`     –û—à–∏–±–∫–∞: ${result.error || result.statusText}`)
    }
  } catch (error) {
    failedTests++
    console.log(`${colors.red}‚ùå ERROR${colors.reset}`)
    console.log(`     –û—à–∏–±–∫–∞: ${error.message}`)
  }
  
  // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è rate limit
  await new Promise(resolve => setTimeout(resolve, 100))
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function runCategoryTests(categoryKey, category) {
  console.log(`\n${colors.cyan}${category.name}${colors.reset}`)
  console.log('‚îÄ'.repeat(50))
  
  for (const test of category.tests) {
    await runTest(test, category.name)
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runAllTests() {
  console.log(`${colors.magenta}`)
  console.log('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó')
  console.log('‚ïë   üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AI –ê–°–°–ò–°–¢–ï–ù–¢–ê     ‚ïë')
  console.log('‚ïë              VOBVOROT TELEGRAM BOT               ‚ïë')
  console.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù')
  console.log(`${colors.reset}`)
  console.log(`üìÖ –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`)
  console.log(`üîó Webhook URL: ${WEBHOOK_URL}`)
  console.log(`üë§ Admin ID: ${ADMIN_ID}`)
  console.log('‚îÄ'.repeat(52))
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...')
  try {
    const healthCheck = await fetch(WEBHOOK_URL.replace('/telegram/ai-assistant', '/health'))
    if (healthCheck.ok) {
      console.log(`${colors.green}‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω${colors.reset}`)
    } else {
      console.log(`${colors.yellow}‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º ${healthCheck.status}${colors.reset}`)
    }
  } catch (error) {
    console.log(`${colors.red}‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}${colors.reset}`)
    warnings++
  }
  
  // –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  const startTime = Date.now()
  
  for (const [categoryKey, category] of Object.entries(testCategories)) {
    await runCategoryTests(categoryKey, category)
  }
  
  const endTime = Date.now()
  const duration = ((endTime - startTime) / 1000).toFixed(2)
  
  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\n' + '‚ïê'.repeat(52))
  console.log(`${colors.cyan}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${colors.reset}`)
  console.log('‚îÄ'.repeat(52))
  console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration} —Å–µ–∫`)
  console.log(`üìù –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${totalTests}`)
  console.log(`${colors.green}‚úÖ –£—Å–ø–µ—à–Ω–æ: ${passedTests} (${((passedTests/totalTests)*100).toFixed(1)}%)${colors.reset}`)
  console.log(`${colors.red}‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${failedTests} (${((failedTests/totalTests)*100).toFixed(1)}%)${colors.reset}`)
  console.log(`${colors.yellow}‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${warnings}${colors.reset}`)
  
  // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:')
  console.log('‚îÄ'.repeat(52))
  Object.entries(testCategories).forEach(([key, category]) => {
    const categoryTests = category.tests.length
    console.log(`  ‚Ä¢ ${category.name}: ${categoryTests} —Ç–µ—Å—Ç–æ–≤`)
  })
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:')
  console.log('‚îÄ'.repeat(52))
  
  if (failedTests === 0) {
    console.log(`${colors.green}‚ú® –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ production.${colors.reset}`)
  } else if (failedTests < totalTests * 0.1) {
    console.log(`${colors.yellow}‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ production.${colors.reset}`)
  } else {
    console.log(`${colors.red}üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã! –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞.${colors.reset}`)
  }
  
  if (warnings > 0) {
    console.log(`${colors.yellow}üìå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã.${colors.reset}`)
  }
  
  console.log('\n' + '‚ïê'.repeat(52))
  
  // –í–æ–∑–≤—Ä–∞—Ç –∫–æ–¥–∞ –≤—ã—Ö–æ–¥–∞
  process.exit(failedTests > 0 ? 1 : 0)
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if (process.argv.includes('--help') || process.argv.includes('-h')) {
  console.log(`
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node test-all-bot-functions.js [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --help, -h     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  --debug        –í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
  --category     –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–µ—Å—Ç–æ–≤
  
–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–µ—Å—Ç–æ–≤:
  - orders       –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏
  - products     –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏  
  - categories   –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
  - customers    CRM —Ñ—É–Ω–∫—Ü–∏–∏
  - statistics   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  - videos       –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ
  - payments     –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏
  - email        Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  - delivery     –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–æ–π
  - logging      –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
  - edge_cases   –ö—Ä–∞–π–Ω–∏–µ —Å–ª—É—á–∞–∏

–ü—Ä–∏–º–µ—Ä:
  node test-all-bot-functions.js --category payments --debug
  `)
  process.exit(0)
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  runAllTests().catch(error => {
    console.error(`${colors.red}–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}${colors.reset}`)
    process.exit(1)
  })
}

module.exports = {
  testCategories,
  sendBotRequest,
  runAllTests
}