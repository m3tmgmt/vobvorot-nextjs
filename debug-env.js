console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
console.log('DATABASE_URL:', process.env.DATABASE_URL);
console.log('DIRECT_DATABASE_URL:', process.env.DIRECT_DATABASE_URL);

// –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ —á—Ç–æ –≤–∏–¥–∏—Ç Prisma
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient({
  log: ['query', 'info', 'warn', 'error'],
});

console.log('\nüîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Prisma:');
// –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
try {
  console.log('Prisma datasourceUrl:', prisma._engineConfig?.datasourceUrl || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
  console.log('Prisma datamodelPath:', prisma._engineConfig?.datamodelPath || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
} catch (error) {
  console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Prisma:', error.message);
}

prisma.$disconnect();