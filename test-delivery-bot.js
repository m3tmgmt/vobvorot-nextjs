// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –±–æ—Ç–µ
const { Bot } = require('grammy')

const BOT_TOKEN = '7700098378:AAGZ1zZOxiwXbJeknO9SvyN25KvfWQkQNrI'
const bot = new Bot(BOT_TOKEN)

// Webhook URL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const WEBHOOK_URL = 'http://localhost:3000/api/telegram/ai-assistant'

// –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
const testCommands = [
  '–ø–æ–∫–∞–∂–∏ –∑–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏',
  '–º–æ–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –°–®–ê',
  '—Ä–∞—Å—Å—á–∏—Ç–∞–π –¥–æ—Å—Ç–∞–≤–∫—É –¥–ª—è –∑–∞–∫–∞–∑–∞ 1740570565',
  '—Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ 1740570565'
]

async function sendTestCommand(command, userId = '316593422') {
  console.log(`\nüîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É: "${command}"`)
  
  const update = {
    update_id: Date.now(),
    message: {
      message_id: Date.now(),
      from: {
        id: parseInt(userId),
        is_bot: false,
        first_name: 'Test',
        username: 'testuser'
      },
      chat: {
        id: parseInt(userId),
        first_name: 'Test',
        username: 'testuser',
        type: 'private'
      },
      date: Math.floor(Date.now() / 1000),
      text: command
    }
  }
  
  try {
    const response = await fetch(WEBHOOK_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Telegram-Bot-Api-Secret-Token': 'not-used-in-dev'
      },
      body: JSON.stringify(update)
    })
    
    const result = await response.text()
    console.log(`‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω (—Å—Ç–∞—Ç—É—Å ${response.status})`)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  }
}

async function runTests() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –¥–æ—Å—Ç–∞–≤–∫–∏...')
  console.log('‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: npm run dev')
  console.log('‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –≤ Telegram')
  
  // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
  await new Promise(resolve => setTimeout(resolve, 2000))
  
  // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã
  for (const command of testCommands) {
    await sendTestCommand(command)
    // –ñ–¥–µ–º –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 3000))
  }
  
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
  console.log('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–≤–µ—Ç—ã –±–æ—Ç–∞ –≤ Telegram')
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runTests().catch(console.error)