// –Ø–≤–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ .env —Ñ–∞–π–ª–∞
require('dotenv').config();

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env:');
console.log('DATABASE_URL:', process.env.DATABASE_URL ? '–∑–∞–≥—Ä—É–∂–µ–Ω' : '–ù–ï –∑–∞–≥—Ä—É–∂–µ–Ω');
console.log('DIRECT_DATABASE_URL:', process.env.DIRECT_DATABASE_URL ? '–∑–∞–≥—Ä—É–∂–µ–Ω' : '–ù–ï –∑–∞–≥—Ä—É–∂–µ–Ω');

if (process.env.DATABASE_URL) {
  console.log('DATABASE_URL:', process.env.DATABASE_URL.substring(0, 50) + '...');
}
if (process.env.DIRECT_DATABASE_URL) {
  console.log('DIRECT_DATABASE_URL:', process.env.DIRECT_DATABASE_URL.substring(0, 50) + '...');
}

// –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º Prisma –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
const { PrismaClient } = require('@prisma/client');

async function testPrismaConnection() {
  const prisma = new PrismaClient({
    log: ['info', 'warn', 'error'],
  });

  try {
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Prisma –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
    const result = await prisma.$queryRaw`SELECT 1 as test`;
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', result);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
    const productCount = await prisma.product.count();
    console.log(`üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ${productCount}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

testPrismaConnection();