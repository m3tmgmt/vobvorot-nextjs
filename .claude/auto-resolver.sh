#!/bin/bash

# Claude AI Auto-Resolver System
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Ç–∏–ø–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –±–µ–∑ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

echo "ü§ñ Claude AI Auto-Resolver - FULLY AUTONOMOUS MODE"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è TypeScript –æ—à–∏–±–æ–∫
auto_fix_typescript() {
    echo "üîß Auto-fixing TypeScript errors..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–∏–ø–æ–≤
    if npm run build 2>&1 | grep -q "Cannot find module.*types"; then
        echo "üì¶ Installing missing type definitions..."
        npm install --save-dev @types/node @types/react @types/react-dom
    fi
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–æ–≤
    find src -name "*.ts" -o -name "*.tsx" | xargs sed -i '' 's/import \* as React from/import React from/g'
    
    echo "‚úÖ TypeScript auto-fixes applied"
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
auto_fix_dependencies() {
    echo "üì¶ Checking and fixing dependencies..."
    
    # –û—á–∏—Å—Ç–∫–∞ node_modules –ø—Ä–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö
    if [ -f "package-lock.json" ] && [ -f "yarn.lock" ]; then
        echo "üßπ Removing conflicting lock files..."
        rm yarn.lock
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if command -v npm &> /dev/null; then
        npm audit fix --force 2>/dev/null || true
    fi
    
    echo "‚úÖ Dependencies auto-fixed"
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Prisma
auto_fix_prisma() {
    echo "üóÑÔ∏è Auto-fixing Prisma issues..."
    
    # –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma client –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
    if [ -f "prisma/schema.prisma" ]; then
        npx prisma generate 2>/dev/null || true
        npx prisma db push 2>/dev/null || true
    fi
    
    echo "‚úÖ Prisma auto-fixes applied"
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Vercel –¥–µ–ø–ª–æ—è
auto_fix_vercel() {
    echo "üöÄ Auto-fixing Vercel deployment issues..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ vercel.json –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if [ ! -f "vercel.json" ]; then
        cat > vercel.json << EOF
{
  "buildCommand": "npm run build",
  "outputDirectory": ".next",
  "installCommand": "npm install",
  "framework": "nextjs"
}
EOF
        echo "‚úÖ Created vercel.json"
    fi
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ environment variables
    if [ -f ".env.local" ] && [ ! -f ".env.production" ]; then
        cp .env.local .env.production
        echo "‚úÖ Created production environment"
    fi
    
    echo "‚úÖ Vercel auto-fixes applied"
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Git –ø—Ä–æ–±–ª–µ–º
auto_fix_git() {
    echo "üìù Auto-fixing Git issues..."
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git user –µ—Å–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    if ! git config user.name > /dev/null 2>&1; then
        git config user.name "Claude AI Assistant"
        git config user.email "claude@anthropic.com"
        echo "‚úÖ Git user configured"
    fi
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ .gitignore
    if [ ! -f ".gitignore" ]; then
        cat > .gitignore << EOF
node_modules/
.next/
.env.local
.env.production
.vercel/
*.log
.claude-session.md
EOF
        echo "‚úÖ Created .gitignore"
    fi
    
    echo "‚úÖ Git auto-fixes applied"
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Next.js
auto_fix_nextjs() {
    echo "‚öõÔ∏è Auto-fixing Next.js issues..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ next.config.js –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if [ ! -f "next.config.js" ] && [ ! -f "next.config.mjs" ]; then
        cat > next.config.js << EOF
/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    serverComponentsExternalPackages: ['bcryptjs'],
  },
  images: {
    domains: ['res.cloudinary.com'],
  },
}

module.exports = nextConfig
EOF
        echo "‚úÖ Created next.config.js"
    fi
    
    echo "‚úÖ Next.js auto-fixes applied"
}

# –§—É–Ω–∫—Ü–∏—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
auto_diagnose_and_fix() {
    echo "üîç Running comprehensive auto-diagnosis..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–±–æ—Ä–∫–∏
    if ! npm run build > /dev/null 2>&1; then
        echo "‚ùå Build failed - applying auto-fixes..."
        auto_fix_typescript
        auto_fix_dependencies
        auto_fix_prisma
        auto_fix_nextjs
        
        # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏
        if npm run build > /dev/null 2>&1; then
            echo "‚úÖ Build fixed automatically!"
        else
            echo "‚ö†Ô∏è Build still failing - manual intervention may be required"
        fi
    else
        echo "‚úÖ Build is working correctly"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Å—Ç–∞—Ç—É—Å–∞
    if git status > /dev/null 2>&1; then
        auto_fix_git
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Vercel –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    auto_fix_vercel
    
    echo "üéØ Auto-diagnosis completed"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "$1" in
        "typescript"|"ts")
            auto_fix_typescript
            ;;
        "dependencies"|"deps")
            auto_fix_dependencies
            ;;
        "prisma")
            auto_fix_prisma
            ;;
        "vercel")
            auto_fix_vercel
            ;;
        "git")
            auto_fix_git
            ;;
        "nextjs")
            auto_fix_nextjs
            ;;
        "all"|"auto"|"")
            auto_diagnose_and_fix
            ;;
        *)
            echo "Usage: $0 {typescript|dependencies|prisma|vercel|git|nextjs|all}"
            echo "  typescript   - Fix TypeScript issues"
            echo "  dependencies - Fix npm/package issues" 
            echo "  prisma       - Fix Prisma database issues"
            echo "  vercel       - Fix Vercel deployment issues"
            echo "  git          - Fix Git configuration issues"
            echo "  nextjs       - Fix Next.js configuration"
            echo "  all          - Run comprehensive auto-diagnosis (default)"
            ;;
    esac
}

main "$@"